org: yeukfei02
app: python-serverless
service: python-serverless

frameworkVersion: "2"
useDotenv: true

provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: ap-southeast-1
  apiName: python-serverless-dev
  tracing:
    apiGateway: true
    lambda: true
  environment:
    PYTHON_ENV: development
    MY_AWS_ACCESS_KEY: ${param:MY_AWS_ACCESS_KEY}
    MY_AWS_SECRET_ACCESS_KEY: ${param:MY_AWS_SECRET_ACCESS_KEY}
    JWT_SECRET: ${param:JWT_SECRET}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "xray:PutTraceSegments"
        - "xray:PutTelemetryRecords"
      Resource:
        - "*"
  apiGateway:
    shouldStartNameWithService: true
    description: python serverless dev
  lambdaHashingVersion: 20201221

functions:
  main:
    handler: src/main/handler.main
    events:
      - http:
          path: /
          method: get
          cors: true

  signup:
    handler: src/signup/handler.signup
    events:
      - http:
          path: /signup
          method: post
          cors: true

  login:
    handler: src/login/handler.login
    events:
      - http:
          path: /login
          method: post
          cors: true

  authorize:
    handler: src/authorize/handler.authorize

  createNotes:
    handler: src/createNotes/handler.createNotes
    events:
      - http:
          path: /notes/create-notes
          method: post
          cors: true
          authorizer:
            name: authorize

  getNotes:
    handler: src/getNotes/handler.getNotes
    events:
      - http:
          path: /notes
          method: get
          cors: true
          authorizer:
            name: authorize

  getNoteById:
    handler: src/getNoteById/handler.getNoteById
    events:
      - http:
          path: /notes/{id}
          method: get
          cors: true
          authorizer:
            name: authorize

  updateNoteById:
    handler: src/updateNoteById/handler.updateNoteById
    events:
      - http:
          path: /notes/{id}
          method: patch
          cors: true
          authorizer:
            name: authorize

  deleteNoteById:
    handler: src/deleteNoteById/handler.deleteNoteById
    events:
      - http:
          path: /notes/{id}
          method: delete
          cors: true
          authorizer:
            name: authorize

plugins:
  - serverless-python-requirements
  - serverless-prune-plugin
  - serverless-offline
  - serverless-plugin-split-stacks

custom:
  pythonRequirements:
    dockerizePip: false
  prune:
    automatic: true
    number: 3
